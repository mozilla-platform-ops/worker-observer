---
tasks:
- targets:
  - provisioner: aws-provisioner-v1
    workertype: gecko-t-win7-32
    iterations: 1
  - provisioner: aws-provisioner-v1
    workertype: gecko-t-win7-32-gpu
    iterations: 1
  - provisioner: aws-provisioner-v1
    workertype: gecko-1-b-win2012
    iterations: 1
  - provisioner: aws-provisioner-v1
    workertype: gecko-3-b-win2012
    iterations: 1
  - provisioner: releng-hardware
    workertype: gecko-t-win10-64-hw-dev
    iterations: 1
  namespace: collect-software-versions
  name:
    prefix: '01 :: '
    suffix: " :: collect-software-versions"
  description:
    prefix: 'retrieve software versions on '
    suffix: ''
  owner: grenade@mozilla.com
  command:
  - mkdir .\public
  - chcp 65001 > nul && ver > .\public\windows-version.txt
  - chcp 65001 > nul && C:\mozilla-build\python\python.exe --version 2> .\public\python2-version.txt
  - chcp 65001 > nul && C:\mozilla-build\python3\python3.exe --version > .\public\python3-version.txt
  - >-
    chcp 65001 > nul && C:\mozilla-build\python\python.exe -c "exec(\"import
    platform;print platform.release()\")" >
    .\public\python2-platform-release.txt
  - >-
    chcp 65001 > nul && C:\mozilla-build\python3\python3.exe -c "exec(\"import
    platform;print(platform.release())\")" >
    .\public\python3-platform-release.txt
  - chcp 65001 > nul && wget.exe --version > .\public\wget-version.txt
  - chcp 65001 > nul && hg --version > .\public\hg-version.txt
  - chcp 65001 > nul && C:\generic-worker\generic-worker.exe --version > .\public\generic-worker-version.txt
  - chcp 65001 > nul && wmic os get servicepackmajorversion > .\public\servicepack-major-version.txt
  artifacts:
  - type: file
    name: public/windows-version.txt
    path: public/windows-version.txt
    line: 0
    regex:
      match: '\d+\.\d+(\.\d+(\.\d+)?)?'
      group: 0
  - type: file
    name: public/python2-version.txt
    path: public/python2-version.txt
    line: 0
    split:
      separator: " "
      index: 1
  - type: file
    name: public/python3-version.txt
    path: public/python3-version.txt
    line: 0
    split:
      separator: " "
      index: 1
  - type: file
    name: public/python2-platform-release.txt
    path: public/python2-platform-release.txt
  - type: file
    name: public/python3-platform-release.txt
    path: public/python3-platform-release.txt
  - type: file
    name: public/wget-version.txt
    path: public/wget-version.txt
    line: 0
    split:
      separator: " "
      index: 2
  - type: file
    name: public/hg-version.txt
    path: public/hg-version.txt
    line: 0
    regex:
      match: '\d+\.\d+(\.\d+(\.\d+)?)?'
      group: 0
  - type: file
    name: public/generic-worker-version.txt
    path: public/generic-worker-version.txt
    line: 0
    split:
      separator: " "
      index: 1
  - type: file
    name: public/servicepack-major-version.txt
    path: public/servicepack-major-version.txt
  features:
    taskclusterProxy: true
  maxruntime: 600
- targets:
  - provisioner: aws-provisioner-v1
    workertype: gecko-t-win7-32
    iterations: 1
  - provisioner: aws-provisioner-v1
    workertype: gecko-t-win7-32-gpu
    iterations: 1
  - provisioner: aws-provisioner-v1
    workertype: gecko-1-b-win2012
    iterations: 1
  - provisioner: aws-provisioner-v1
    workertype: gecko-2-b-win2012
    iterations: 1
  - provisioner: aws-provisioner-v1
    workertype: gecko-3-b-win2012
    iterations: 1
  namespace: collect-occ-config
  name:
    prefix: '02 :: '
    suffix: " :: collect-occ-config"
  description:
    prefix: 'determine occ configuration on '
    suffix: ''
  owner: grenade@mozilla.com
  command:
  - mkdir .\public
  - chcp 65001 > nul && reg query HKLM\SOFTWARE\Mozilla\OpenCloudConfig\Source /v Organisation > .\public\occ-source-organisation.txt
  - chcp 65001 > nul && reg query HKLM\SOFTWARE\Mozilla\OpenCloudConfig\Source /v Repository > .\public\occ-source-repository.txt
  - chcp 65001 > nul && reg query HKLM\SOFTWARE\Mozilla\OpenCloudConfig\Source /v Revision > .\public\occ-source-revision.txt
  artifacts:
  - type: file
    name: public/occ-source-organisation.txt
    path: public/occ-source-organisation.txt
    line: 1
    split:
      separator: "    "
      index: 2
  - type: file
    name: public/occ-source-repository.txt
    path: public/occ-source-repository.txt
    line: 1
    split:
      separator: "    "
      index: 2
  - type: file
    name: public/occ-source-revision.txt
    path: public/occ-source-revision.txt
    line: 1
    split:
      separator: "    "
      index: 2
  features:
    taskclusterProxy: true
  maxruntime: 600
- targets:
  - provisioner: releng-hardware
    workertype: gecko-t-win10-64-hw-dev
    iterations: 1
  namespace: collect-ronin-config
  name:
    prefix: '03 :: '
    suffix: " :: collect-ronin-config"
  description:
    prefix: 'determine ronin configuration on '
    suffix: ''
  owner: grenade@mozilla.com
  command:
  - mkdir .\public
  - chcp 65001 > nul && reg query HKLM\SOFTWARE\Mozilla\ronin_puppet\Source /v Organisation > .\public\ronin-source-organisation.txt
  - chcp 65001 > nul && reg query HKLM\SOFTWARE\Mozilla\ronin_puppet\Source /v Repository > .\public\ronin-source-repository.txt
  - chcp 65001 > nul && reg query HKLM\SOFTWARE\Mozilla\ronin_puppet\Source /v Revision > .\public\ronin-source-revision.txt
  artifacts:
  - type: file
    name: public/ronin-source-organisation.txt
    path: public/ronin-source-organisation.txt
    line: 1
    split:
      separator: "    "
      index: 2
  - type: file
    name: public/ronin-source-repository.txt
    path: public/ronin-source-repository.txt
    line: 1
    split:
      separator: "    "
      index: 2
  - type: file
    name: public/ronin-source-revision.txt
    path: public/ronin-source-revision.txt
    line: 1
    split:
      separator: "    "
      index: 2
  features:
    taskclusterProxy: true
  maxruntime: 600